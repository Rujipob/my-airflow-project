import pandas as pd
import numpy as np
import re

print("=" * 80)
print("=== Data Cleansing Script ===")
print("=" * 80)

# 1. ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
print("\n[1/8] ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö...")
df = pd.read_excel('data/ckan_data.xlsx')
print(f"   ‚úÖ ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {len(df)} rows, {len(df.columns)} columns")

# 2. ‡∏•‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå _id
print("\n[2/8] ‡∏•‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå _id (‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô)...")
df = df.drop(columns=['_id'])
print(f"   ‚úÖ ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ {len(df.columns)} columns")

# 3. ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
print("\n[3/8] ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î...")
month_columns = ['‡∏ï.‡∏Ñ. 67', '‡∏û.‡∏¢. 67', '‡∏ò.‡∏Ñ. 67', '‡∏°.‡∏Ñ.68', '‡∏Å.‡∏û. 68', 
                 '‡∏°‡∏µ.‡∏Ñ. 68', '‡πÄ‡∏°.‡∏¢. 68', '‡∏û.‡∏Ñ. 68', '‡∏°‡∏¥.‡∏¢. 68', 
                 '‡∏Å.‡∏Ñ. 68', '‡∏™.‡∏Ñ. 68', '‡∏Å.‡∏¢. 68']

def clean_number(value):
    """‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ comma ‡πÅ‡∏•‡∏∞‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç"""
    if pd.isna(value) or value == '-':
        return 0
    if isinstance(value, (int, float)):
        return int(value)
    # ‡∏•‡∏ö comma ‡πÅ‡∏•‡∏∞‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á
    cleaned = str(value).replace(',', '').replace(' ', '').strip()
    if cleaned == '' or cleaned == '-':
        return 0
    try:
        return int(float(cleaned))
    except:
        return 0

for col in month_columns:
    df[col] = df[col].apply(clean_number)
print(f"   ‚úÖ ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• {len(month_columns)} ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç")

# 4. ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• string (‡∏•‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤-‡∏´‡∏•‡∏±‡∏á)
print("\n[4/8] ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• text...")
df['‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£'] = df['‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£'].str.strip()
df['‡∏™‡∏ß‡∏ô‡∏™‡∏±‡∏ï‡∏ß‡πå'] = df['‡∏™‡∏ß‡∏ô‡∏™‡∏±‡∏ï‡∏ß‡πå'].str.strip()
print("   ‚úÖ ‡∏•‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤-‡∏´‡∏•‡∏±‡∏á‡πÉ‡∏ô ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‡πÅ‡∏•‡∏∞ ‡∏™‡∏ß‡∏ô‡∏™‡∏±‡∏ï‡∏ß‡πå")

# 5. ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÉ‡∏´‡πâ‡∏™‡∏±‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô English
print("\n[5/8] ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå...")
column_mapping = {
    '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£': 'category',
    '‡∏™‡∏ß‡∏ô‡∏™‡∏±‡∏ï‡∏ß‡πå': 'zoo',
    '‡∏õ‡∏µ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì': 'fiscal_year',
    '‡∏ï.‡∏Ñ. 67': 'oct_67',
    '‡∏û.‡∏¢. 67': 'nov_67',
    '‡∏ò.‡∏Ñ. 67': 'dec_67',
    '‡∏°.‡∏Ñ.68': 'jan_68',
    '‡∏Å.‡∏û. 68': 'feb_68',
    '‡∏°‡∏µ.‡∏Ñ. 68': 'mar_68',
    '‡πÄ‡∏°.‡∏¢. 68': 'apr_68',
    '‡∏û.‡∏Ñ. 68': 'may_68',
    '‡∏°‡∏¥.‡∏¢. 68': 'jun_68',
    '‡∏Å.‡∏Ñ. 68': 'jul_68',
    '‡∏™.‡∏Ñ. 68': 'aug_68',
    '‡∏Å.‡∏¢. 68': 'sep_68'
}
df_clean = df.rename(columns=column_mapping)
print("   ‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©")

# 6. ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå total (‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏õ‡∏µ)
print("\n[6/8] ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå total...")
month_cols_clean = [col for col in df_clean.columns if col.endswith('_67') or col.endswith('_68')]
df_clean['total_visitors'] = df_clean[month_cols_clean].sum(axis=1)
print(f"   ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå total_visitors (‡∏£‡∏ß‡∏°‡∏à‡∏≤‡∏Å {len(month_cols_clean)} ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô)")

# 7. ‡∏à‡∏±‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
print("\n[7/8] ‡∏à‡∏±‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå...")
ordered_columns = ['zoo', 'category', 'fiscal_year'] + month_cols_clean + ['total_visitors']
df_clean = df_clean[ordered_columns]
print("   ‚úÖ ‡∏à‡∏±‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")

# 8. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà cleansing ‡πÅ‡∏•‡πâ‡∏ß
print("\n[8/8] ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...")
# ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏õ‡πá‡∏ô CSV ‡πÅ‡∏•‡∏∞ Excel
df_clean.to_csv('data/ckan_data_cleaned.csv', index=False, encoding='utf-8-sig')
df_clean.to_excel('data/ckan_data_cleaned.xlsx', index=False)
print("   ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå:")
print("      - data/ckan_data_cleaned.csv")
print("      - data/ckan_data_cleaned.xlsx")

# ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
print("\n" + "=" * 80)
print("=== ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå ===")
print("=" * 80)
print(f"\nüìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà cleansing ‡πÅ‡∏•‡πâ‡∏ß:")
print(f"   - ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏ñ‡∏ß: {len(df_clean)}")
print(f"   - ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå: {len(df_clean.columns)}")
print(f"   - ‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {df_clean.isnull().sum().sum()}")

print(f"\nüìù ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (Categories) {df_clean['category'].nunique()} ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó:")
for cat in df_clean['category'].unique():
    total = df_clean[df_clean['category'] == cat]['total_visitors'].sum()
    print(f"   - {cat}: {total:,} ‡∏Ñ‡∏ô")

print(f"\nü¶Å ‡∏™‡∏ß‡∏ô‡∏™‡∏±‡∏ï‡∏ß‡πå {df_clean['zoo'].nunique()} ‡πÅ‡∏´‡πà‡∏á:")
for zoo in df_clean['zoo'].unique():
    total = df_clean[df_clean['zoo'] == zoo]['total_visitors'].sum()
    print(f"   - {zoo}: {total:,} ‡∏Ñ‡∏ô")

print(f"\nüéØ ‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ä‡∏°‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {df_clean['total_visitors'].sum():,} ‡∏Ñ‡∏ô")

print("\n" + "=" * 80)
print("=== ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà cleansing ‡πÅ‡∏•‡πâ‡∏ß (5 ‡πÅ‡∏ñ‡∏ß‡πÅ‡∏£‡∏Å) ===")
print("=" * 80)
print(df_clean.head().to_string())

print("\n‚úÖ Data Cleansing ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!")
